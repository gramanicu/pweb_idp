version: "3.2"

services:
    pweb_frontend:
        
        image: fe
        container_name: pweb_frontend
        ports:
            - 3000:3000
        networks:
            - internal-frontend-backend-network
        depends_on:
            - pweb_backend
            


    pweb_backend:
        
        image: be
        container_name: pweb_backend

        ports:
            - 3001:3001
        networks:
            - internal-frontend-backend-network
            - pweb-database-network
            - rmq
        depends_on:
            - mysql
            
        

   

    mysql:
        image: mysql
        container_name: mysql
        restart: always

        ports:
            - 3306:3306
        environment:
            MYSQL_ROOT_PASSWORD: "password"

        networks:
            - pweb-database-network
    kong:
        image: kong:latest
        volumes:
            - ./Kong:/usr/local/kong/declarative
        environment:
            KONG_DATABASE: 'off'
            KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
            KONG_PROXY_ACCESS_LOG: /dev/stdout
            KONG_ADMIN_ACCESS_LOG: /dev/stdout
            KONG_PROXY_ERROR_LOG: /dev/stderr
            KONG_ADMIN_ERROR_LOG: /dev/stderr
            KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
        ports:
            - 80:8000
            - 443:8443
            - 8001:8001
            - 8444:8444
        deploy:
            placement:
                constraints: [node.role == manager]
        networks:
            - internal-frontend-backend-network
            - logging

    prometheus:
      image: prom/prometheus
      volumes:
        - ./prometheus/config.yml:/etc/prometheus/prometheus.yml
      ports:
        - 9090:9090
      networks:
        - logging



networks:
    internal-frontend-backend-network:
    pweb-database-network:
    rmq:
    database-admin:
    logging:
    
